// Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema
using Friflo.Json.Fliox.Mapper.Map;
using Friflo.Json.Fliox.Hub.DB.Cluster;

// ReSharper disable InconsistentNaming
namespace Gen.Friflo.Json.Fliox.Hub.DB.Cluster
{
    static class Gen_HostMemory
    {
        private const int Gen_totalAllocatedBytes = 0;
        private const int Gen_totalMemory = 1;
        private const int Gen_gc = 2;

        private static bool ReadField (ref HostMemory obj, PropField field, ref Reader reader) {
            bool success;
            switch (field.genIndex) {
                case Gen_totalAllocatedBytes: obj.totalAllocatedBytes = reader.ReadInt64 (field, out success);  return success;
                case Gen_totalMemory:         obj.totalMemory         = reader.ReadInt64 (field, out success);  return success;
                case Gen_gc:                  obj.gc                  = reader.ReadClass (field, obj.gc,                  out success);  return success;
            }
            return false;
        }

        private static void Write(ref HostMemory obj, PropField[] fields, ref Writer writer, ref bool firstMember) {
            writer.WriteInt64 (fields[Gen_totalAllocatedBytes], obj.totalAllocatedBytes, ref firstMember);
            writer.WriteInt64 (fields[Gen_totalMemory],         obj.totalMemory,         ref firstMember);
            writer.WriteClass (fields[Gen_gc],                  obj.gc,                  ref firstMember);
        }
    }
}

