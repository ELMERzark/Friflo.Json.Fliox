{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema",
    "definitions": {
        "DbContainers": {
            "type": "object",
            "description": "<b>containers</b> and <b>storage</b> type of a database",
            "properties": {
                "id":         { "type": "string", "description": "database name" },
                "storage":    { "type": "string", "description": "<b>storage</b> type. e.g. memory, file-system, ..." },
                "containers": { "type": "array", "items": { "type": "string" }, "description": "list of database <b>containers</b>" }
            },
            "required": [
                "id",
                "storage",
                "containers"
            ],
            "additionalProperties": false
        },
        "DbMessages": {
            "type": "object",
            "description": "<b>commands</b> and <b>messages</b> of a database",
            "properties": {
                "id":       { "type": "string", "description": "database name" },
                "commands": { "type": "array", "items": { "type": "string" }, "description": "list of database <b>commands</b>" },
                "messages": { "type": "array", "items": { "type": "string" }, "description": "list of database <b>messages</b>" }
            },
            "required": [
                "id",
                "commands",
                "messages"
            ],
            "additionalProperties": false
        },
        "DbSchema": {
            "type": "object",
            "description": "A <b>DbSchema</b> can be assigned to a database to specify its <b>containers</b>, <b>commands</b> and <b>messages</b>.<br/>\nThe types used by the Schema are declared within <b>jsonSchemas</b>.<br/>\nThe type referenced by the tuple <b>schemaName</b> / <b>schemaPath</b> specify the\ndatabase containers, commands and messages.",
            "properties": {
                "id":          { "type": "string", "description": "database name" },
                "schemaName":  { "type": "string", "description": "refer a type definition of the JSON Schema referenced with <b>schemaPath</b>" },
                "schemaPath":  { "type": "string", "description": "refer a JSON Schema in <b>jsonSchemas</b>" },
                "jsonSchemas": { "additionalProperties": {  }, "type": "object", "description": "map of <b>JSON Schemas</b> each containing a set of type definitions.<br/>\nEach JSON Schema is identified by its unique path" }
            },
            "required": [
                "id",
                "schemaName",
                "schemaPath",
                "jsonSchemas"
            ],
            "additionalProperties": false
        },
        "DbStats": {
            "type": "object",
            "description": "list of container statistics. E.g. the number of entities per container",
            "properties": {
                "containers": { "type": ["array", "null"], "items": { "$ref": "#/definitions/ContainerStats" }, "description": "list of container statistics - number of entities per container" }
            },
            "additionalProperties": false
        },
        "ContainerStats": {
            "type": "object",
            "description": "statistics of a single container. E.g. the number of entities in a container",
            "properties": {
                "name":  { "type": "string", "description": "container name" },
                "count": { "$ref": "./Standard.json#/definitions/int64", "description": "number of entities / records within a container" }
            },
            "required": [
                "name",
                "count"
            ],
            "additionalProperties": false
        },
        "HostInfo": {
            "type": "object",
            "description": "general information about a Hub",
            "properties": {
                "hostVersion":    { "type": "string", "description": "host version" },
                "flioxVersion":   { "type": "string", "description": "Fliox library version" },
                "hostName":       { "type": ["string", "null"], "description": "host name. Used as <b>id</b> in\n<b>hosts</b> of database <b>monitor</b>" },
                "projectName":    { "type": ["string", "null"], "description": "project name" },
                "projectWebsite": { "type": ["string", "null"], "description": "link to a website describing project and Hub" },
                "envName":        { "type": ["string", "null"], "description": "environment name. e.g. 'dev', 'test', 'staging', 'prod'" },
                "envColor":       { "type": ["string", "null"], "description": "the color used to display the environment name in GUI's using CSS color format.<br/>\nE.g. using red for a production environment: '#ff0000' or 'rgb(255 0 0)'" },
                "routes":         { "type": "array", "items": { "type": "string" }, "description": "routes configures by <b>HttpHost</b> - commonly below <c>/fliox</c>" }
            },
            "required": [
                "hostVersion",
                "flioxVersion",
                "routes"
            ],
            "additionalProperties": false
        },
        "HostCluster": {
            "type": "object",
            "description": "All <b>databases</b> hosted by Hub",
            "properties": {
                "databases": { "type": "array", "items": { "$ref": "#/definitions/DbContainers" }, "description": "list of <b>databases</b> hosted by Hub" }
            },
            "required": [
                "databases"
            ],
            "additionalProperties": false
        },
        "UserOptions": {
            "type": "object",
            "properties": {
                "addGroups":    { "type": ["array", "null"], "items": { "type": "string" } },
                "removeGroups": { "type": ["array", "null"], "items": { "type": "string" } }
            },
            "additionalProperties": false
        },
        "UserResult": {
            "type": "object",
            "properties": {
                "groups": { "type": "array", "items": { "type": "string" } }
            },
            "required": [
                "groups"
            ],
            "additionalProperties": false
        }
    }
}

