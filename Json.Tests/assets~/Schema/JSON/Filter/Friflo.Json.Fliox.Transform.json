{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema",
    "definitions": {
        "FilterOperation": {
            "discriminator": "op",
            "oneOf": [
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Equal" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/NotEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Less" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LessOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Greater" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/GreaterOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/And" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Or" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/TrueLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/FalseLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Not" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Filter" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Any" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/All" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Contains" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/StartsWith" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/EndsWith" }
            ],
            "properties": {
                "op": { "enum": ["equal", "notEqual", "less", "lessOrEqual", "greater", "greaterOrEqual", "and", "or", "true", "false", "not", "filter", "any", "all", "contains", "startsWith", "endsWith"] }
            },
            "required": [
                "op"
            ],
            "additionalProperties": true
        },
        "Operation": {
            "discriminator": "op",
            "oneOf": [
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Field" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/StringLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/DoubleLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LongLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/NullLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/PiLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/EulerLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/TauLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Abs" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Ceiling" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Floor" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Exp" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Log" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Sqrt" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Negate" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Add" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Subtract" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Multiply" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Divide" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Modulo" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Min" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Max" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Sum" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Average" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Count" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Equal" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/NotEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Less" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LessOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Greater" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/GreaterOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/And" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Or" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/TrueLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/FalseLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Not" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Lambda" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Filter" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Any" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/All" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/CountWhere" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Contains" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/StartsWith" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/EndsWith" }
            ],
            "properties": {
                "op": { "enum": ["field", "string", "double", "int64", "null", "PI", "E", "Tau", "abs", "ceiling", "floor", "exp", "log", "sqrt", "negate", "add", "subtract", "multiply", "divide", "modulo", "min", "max", "sum", "average", "count", "equal", "notEqual", "less", "lessOrEqual", "greater", "greaterOrEqual", "and", "or", "true", "false", "not", "lambda", "filter", "any", "all", "countWhere", "contains", "startsWith", "endsWith"] }
            },
            "required": [
                "op"
            ],
            "additionalProperties": true
        }
    }
}

