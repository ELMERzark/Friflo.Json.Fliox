
{
  "openapi": "3.0.0",
  "info": {
    "title":        "UserStore",
    "description":  "Control individual user access to database containers and commands. <br/>\nEach <b>user</b> has a set of <b>roles</b> stored in container <b>permissions</b>. <br/>\nEach <b>role</b> in container <b>roles</b> has a set of <b>rights</b> which grant or deny container access or command execution.",
    "version":      "0.0.0"
  },
  "servers": [
    {
      "url":          "http://localhost:8010/fliox/rest/main_db/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary":    "return all database containers",
        "tags":       ["database"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers"
                }
              }
            }
          }
        }
      }
    },
    "/?command=AuthenticateUser": {
      "get": {
        "summary":    "authenticate user <b>Credentials</b>: <b>userId</b> and <b>token</b>",
        "tags":       ["commands"],
        "parameters": [
          {
            "in":       "query",
            "name":     "param",
            "schema":   { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.json#/definitions/Credentials" },
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Echo": {
      "get": {
        "summary":    "echos the given parameter to assure the database is working appropriately.",
        "tags":       ["standard commands"],
        "parameters": [
          {
            "in":       "query",
            "name":     "param",
            "schema":   {   },
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Containers": {
      "get": {
        "summary":    "list all database containers",
        "tags":       ["standard commands"],
        "parameters": [
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Messages": {
      "get": {
        "summary":    "list all database commands and messages",
        "tags":       ["standard commands"],
        "parameters": [
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Schema": {
      "get": {
        "summary":    "return the Schema assigned to the database",
        "tags":       ["standard commands"],
        "parameters": [
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Stats": {
      "get": {
        "summary":    "return the number of entities of all containers (or the given container) of the database",
        "tags":       ["standard commands"],
        "parameters": [
          {
            "in":       "query",
            "name":     "param",
            "schema":   { "type": "string" },
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Details": {
      "get": {
        "summary":    "returns general information about the Hub like version, host, project and environment name",
        "tags":       ["standard commands"],
        "parameters": [
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Cluster": {
      "get": {
        "summary":    "list all databases and their containers hosted by the Hub",
        "tags":       ["standard commands"],
        "parameters": [
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  
                }
              }
            }
          }
        }
      }
    },
    "/credentials": {
      "get": {
        "summary":    "return all records in container credentials",
        "tags":       ["container: credentials"],
        "parameters": [
          {
            "in":       "query",
            "name":     "filter",
            "schema":   { "type": "string" },
            "description": "---"
          },
          {
            "in":       "query",
            "name":     "limit",
            "schema":   { "type": "integer" },
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "create or update records in container credentials",
        "tags":       ["container: credentials"],
        "requestBody": {          
          "description": "---",
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "delete": {
        "summary":    "delete records in container credentials by id",
        "tags":       ["container: credentials"],
        "parameters": [
          {
            "in":       "query",
            "name":     "ids",
            "schema":   { "type": "string" },
            "required": true,
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/credentials/{id}": {
      "get": {
        "summary":    "return a single record from container credentials",
        "tags":       ["container: credentials"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential"
                }
              }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "summary":    "return all records in container permissions",
        "tags":       ["container: permissions"],
        "parameters": [
          {
            "in":       "query",
            "name":     "filter",
            "schema":   { "type": "string" },
            "description": "---"
          },
          {
            "in":       "query",
            "name":     "limit",
            "schema":   { "type": "integer" },
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "create or update records in container permissions",
        "tags":       ["container: permissions"],
        "requestBody": {          
          "description": "---",
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "delete": {
        "summary":    "delete records in container permissions by id",
        "tags":       ["container: permissions"],
        "parameters": [
          {
            "in":       "query",
            "name":     "ids",
            "schema":   { "type": "string" },
            "required": true,
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "get": {
        "summary":    "return a single record from container permissions",
        "tags":       ["container: permissions"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "summary":    "return all records in container roles",
        "tags":       ["container: roles"],
        "parameters": [
          {
            "in":       "query",
            "name":     "filter",
            "schema":   { "type": "string" },
            "description": "---"
          },
          {
            "in":       "query",
            "name":     "limit",
            "schema":   { "type": "integer" },
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "create or update records in container roles",
        "tags":       ["container: roles"],
        "requestBody": {          
          "description": "---",
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "delete": {
        "summary":    "delete records in container roles by id",
        "tags":       ["container: roles"],
        "parameters": [
          {
            "in":       "query",
            "name":     "ids",
            "schema":   { "type": "string" },
            "required": true,
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "summary":    "return a single record from container roles",
        "tags":       ["container: roles"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": "---"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role"
                }
              }
            }
          }
        }
      }
    }
  }   
}