{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Generated by: https://github.com/friflo/Friflo.Json.Fliox/tree/main/Json/Fliox/Schema",
    "definitions": {
        "FilterOperation": {
            "discriminator": "op",
            "oneOf": [
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Equal" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/NotEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LessThan" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LessThanOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/GreaterThan" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/GreaterThanOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/And" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Or" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/TrueLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/FalseLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Not" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Any" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/All" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Contains" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/StartsWith" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/EndsWith" }
            ],
            "properties": {

            },
            "additionalProperties": true
        },
        "Operation": {
            "discriminator": "op",
            "oneOf": [
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Field" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/StringLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/DoubleLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LongLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/NullLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Abs" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Ceiling" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Floor" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Exp" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Log" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Sqrt" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Negate" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Add" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Subtract" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Multiply" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Divide" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Min" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Max" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Sum" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Average" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Count" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Equal" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/NotEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LessThan" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/LessThanOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/GreaterThan" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/GreaterThanOrEqual" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/And" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Or" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/TrueLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/FalseLiteral" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Not" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Any" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/All" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/CountWhere" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/Contains" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/StartsWith" },
                { "$ref": "./Friflo.Json.Fliox.Transform.Query.Ops.json#/definitions/EndsWith" }
            ],
            "properties": {

            },
            "additionalProperties": true
        },
        "JsonPatch": {
            "discriminator": "op",
            "oneOf": [
                { "$ref": "#/definitions/PatchReplace" },
                { "$ref": "#/definitions/PatchAdd" },
                { "$ref": "#/definitions/PatchRemove" },
                { "$ref": "#/definitions/PatchCopy" },
                { "$ref": "#/definitions/PatchMove" },
                { "$ref": "#/definitions/PatchTest" }
            ],
            "properties": {

            },
            "additionalProperties": true
        },
        "PatchReplace": {
            "type": "object",
            "extends": { "$ref": "#/definitions/JsonPatch" },
            "properties": {
                "op":    { "enum": ["replace"] },
                "path":  { "type": "string" },
                "value": {  }
            },
            "required": [
                "op",
                "path",
                "value"
            ],
            "additionalProperties": false
        },
        "PatchAdd": {
            "type": "object",
            "extends": { "$ref": "#/definitions/JsonPatch" },
            "properties": {
                "op":    { "enum": ["add"] },
                "path":  { "type": "string" },
                "value": {  }
            },
            "required": [
                "op",
                "path",
                "value"
            ],
            "additionalProperties": false
        },
        "PatchRemove": {
            "type": "object",
            "extends": { "$ref": "#/definitions/JsonPatch" },
            "properties": {
                "op":   { "enum": ["remove"] },
                "path": { "type": "string" }
            },
            "required": [
                "op",
                "path"
            ],
            "additionalProperties": false
        },
        "PatchCopy": {
            "type": "object",
            "extends": { "$ref": "#/definitions/JsonPatch" },
            "properties": {
                "op":   { "enum": ["copy"] },
                "path": { "type": "string" },
                "from": { "type": ["string", "null"] }
            },
            "required": [
                "op",
                "path"
            ],
            "additionalProperties": false
        },
        "PatchMove": {
            "type": "object",
            "extends": { "$ref": "#/definitions/JsonPatch" },
            "properties": {
                "op":   { "enum": ["move"] },
                "path": { "type": "string" },
                "from": { "type": ["string", "null"] }
            },
            "required": [
                "op",
                "path"
            ],
            "additionalProperties": false
        },
        "PatchTest": {
            "type": "object",
            "extends": { "$ref": "#/definitions/JsonPatch" },
            "properties": {
                "op":    { "enum": ["test"] },
                "path":  { "type": "string" },
                "value": {  }
            },
            "required": [
                "op",
                "path"
            ],
            "additionalProperties": false
        }
    }
}

