{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema",
    "definitions": {
        "JSONSchemaTemp": {
            "type": "object",
            "description": "Compatible subset of JSON Schema with some extensions required for code generation.<br/>\nJSON Schema specification: https://json-schema.org/specification.html<br/><br/>\nFollowing extensions are added to JSON Schema:\n<ul><li><b>extends</b></li><li><b>discriminator</b></li><li><b>isStruct</b></li><li><b>isAbstract</b></li><li><b>messages</b></li><li><b>commands</b></li><li><b>key</b></li><li><b>relation</b></li></ul>\nThe restriction of <b>JSONSchemaTemp</b> are:\n<ul><li>\nA schema property cannot nest anonymous types by 'type': 'object' with 'properties': { ... }.\nThe property type needs to be a known type like 'string', ... or a referenced ('$ref') type.\nThis restriction enables generation of code and types for languages without support of anonymous types.\nIt also enables concise error messages for validation errors when using <b>TypeValidator</b>.\n</li><li>\nNote: Arrays and dictionaries are also valid schema properties. E.g. <br/>\nA valid array property like: <code>{ 'type': ['array', 'null'], 'items': { 'type': 'string' } }</code><br/>\nA valid dictionary property like:  <code>{ 'type': 'object', 'additionalProperties': { 'type': 'string' } }</code><br/>\nThese element / value types needs to be a known type like 'string', ... or a referenced ('$ref') type.\n</li><li>\nOn root level are only '$ref': '...' and 'definitions': [...] allowed.\n</li></ul>",
            "properties": {
                "$ref":        { "type": ["string", "null"] },
                "definitions": { "additionalProperties": { "$ref": "#/definitions/JsonType" }, "type": "object" }
            },
            "additionalProperties": false
        },
        "JsonType": {
            "type": "object",
            "properties": {
                "extends":              { "oneOf": [{ "$ref": "#/definitions/TypeRef" }, {"type": "null"}] },
                "discriminator":        { "type": ["string", "null"] },
                "oneOf":                { "type": ["array", "null"], "items": { "$ref": "#/definitions/FieldType" } },
                "isAbstract":           { "type": ["boolean", "null"] },
                "type":                 { "type": ["string", "null"] },
                "key":                  { "type": ["string", "null"] },
                "properties":           { "additionalProperties": { "$ref": "#/definitions/FieldType" }, "type": "object" },
                "commands":             { "additionalProperties": { "$ref": "#/definitions/MessageType" }, "type": "object" },
                "messages":             { "additionalProperties": { "$ref": "#/definitions/MessageType" }, "type": "object" },
                "isStruct":             { "type": ["boolean", "null"] },
                "required":             { "type": ["array", "null"], "items": { "type": "string" } },
                "additionalProperties": { "type": "boolean" },
                "enum":                 { "type": ["array", "null"], "items": { "type": "string" } },
                "description":          { "type": ["string", "null"] }
            },
            "required": [
                "additionalProperties"
            ],
            "additionalProperties": false
        },
        "TypeRef": {
            "type": "object",
            "properties": {
                "$ref": { "type": "string" },
                "type": { "type": ["string", "null"] }
            },
            "required": [
                "$ref"
            ],
            "additionalProperties": false
        },
        "FieldType": {
            "type": "object",
            "properties": {
                "type":                 {  },
                "enum":                 { "type": ["array", "null"], "items": { "type": "string" } },
                "items":                { "oneOf": [{ "$ref": "#/definitions/FieldType" }, {"type": "null"}] },
                "oneOf":                { "type": ["array", "null"], "items": { "$ref": "#/definitions/FieldType" } },
                "minimum":              { "oneOf": [{ "$ref": "./Standard.json#/definitions/int64" }, {"type": "null"}] },
                "maximum":              { "oneOf": [{ "$ref": "./Standard.json#/definitions/int64" }, {"type": "null"}] },
                "pattern":              { "type": ["string", "null"] },
                "format":               { "type": ["string", "null"] },
                "$ref":                 { "type": ["string", "null"] },
                "additionalProperties": { "oneOf": [{ "$ref": "#/definitions/FieldType" }, {"type": "null"}] },
                "isAutoIncrement":      { "type": ["boolean", "null"] },
                "relation":             { "type": ["string", "null"] },
                "description":          { "type": ["string", "null"] }
            },
            "additionalProperties": false
        },
        "MessageType": {
            "type": "object",
            "properties": {
                "param":       { "oneOf": [{ "$ref": "#/definitions/FieldType" }, {"type": "null"}] },
                "result":      { "oneOf": [{ "$ref": "#/definitions/FieldType" }, {"type": "null"}] },
                "description": { "type": ["string", "null"] }
            },
            "additionalProperties": false
        }
    }
}

