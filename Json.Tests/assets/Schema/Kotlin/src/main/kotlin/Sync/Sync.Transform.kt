// Generated by: https://github.com/friflo/Friflo.Json.Flow/tree/main/Json/Flow/Schema
package Sync.Transform

import kotlinx.serialization.*
import CustomSerializer.BigIntegerSerializer
import kotlinx.serialization.json.*

@Serializable
// @JsonClassDiscriminator("op") https://github.com/Kotlin/kotlinx.serialization/issues/546
abstract class FilterOperation  : Operation() {
}

@Serializable
// @JsonClassDiscriminator("op") https://github.com/Kotlin/kotlinx.serialization/issues/546
abstract class Operation  {
}

@Serializable
// @JsonClassDiscriminator("op") https://github.com/Kotlin/kotlinx.serialization/issues/546
abstract class JsonPatch  {
}

@Serializable
@SerialName("replace")
data class PatchReplace (
              val path  : String,
              val value : JsonElement,
) : JsonPatch()

@Serializable
@SerialName("add")
data class PatchAdd (
              val path  : String,
              val value : JsonElement,
) : JsonPatch()

@Serializable
@SerialName("remove")
data class PatchRemove (
              val path : String,
) : JsonPatch()

@Serializable
@SerialName("copy")
data class PatchCopy (
              val path : String,
              val from : String? = null,
) : JsonPatch()

@Serializable
@SerialName("move")
data class PatchMove (
              val path : String,
              val from : String? = null,
) : JsonPatch()

@Serializable
@SerialName("test")
data class PatchTest (
              val path  : String,
              val value : JsonElement,
) : JsonPatch()

