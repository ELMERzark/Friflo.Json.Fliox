// Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Friflo.Json.Fliox;
using UserStore2.Hub.Protocol.Tasks;

#pragma warning disable 0169 // [CS0169] The field '...' is never used

namespace UserStore2.Hub.Host.Auth.Rights {

[Discriminator("type")]
[PolymorphType(typeof(DbFullRight),           Discriminant = "dbFull")]
[PolymorphType(typeof(DbTaskRight),           Discriminant = "dbTask")]
[PolymorphType(typeof(DbContainerRight),      Discriminant = "dbContainer")]
[PolymorphType(typeof(SendMessageRight),      Discriminant = "sendMessage")]
[PolymorphType(typeof(SubscribeMessageRight), Discriminant = "subscribeMessage")]
[PolymorphType(typeof(PredicateRight),        Discriminant = "predicate")]
public abstract class Right {
    string  description;
}

public class DbFullRight : Right {
    [Required]
    string  database;
}

public class DbTaskRight : Right {
    [Required]
    string          database;
    [Required]
    List<TaskType>  types;
}

public class DbContainerRight : Right {
    [Required]
    string                 database;
    [Required]
    List<ContainerAccess>  containers;
}

public class ContainerAccess {
    [Required]
    string               name;
    List<OperationType>  operations;
    List<EntityChange>   subscribeChanges;
}

public enum OperationType {
    create,
    upsert,
    delete,
    deleteAll,
    patch,
    read,
    query,
    aggregate,
    mutate,
    full,
}

public class SendMessageRight : Right {
    [Required]
    string        database;
    [Required]
    List<string>  names;
}

public class SubscribeMessageRight : Right {
    [Required]
    string        database;
    [Required]
    List<string>  names;
}

public class PredicateRight : Right {
    [Required]
    List<string>  names;
}

}

