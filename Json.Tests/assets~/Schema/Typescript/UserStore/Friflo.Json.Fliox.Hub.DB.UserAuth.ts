// Generated by: https://github.com/friflo/Friflo.Json.Fliox/tree/main/Json/Fliox/Schema
import { Catalog }       from "./Friflo.Json.Fliox.Hub.DB.Cluster"
import { CatalogSchema } from "./Friflo.Json.Fliox.Hub.DB.Cluster"
import { CatalogList }   from "./Friflo.Json.Fliox.Hub.DB.Cluster"
import { Right }         from "./Friflo.Json.Fliox.Hub.Host.Auth.Rights"
import { Right_Union }   from "./Friflo.Json.Fliox.Hub.Host.Auth.Rights"

export abstract class UserStore {
    credentials  : { [key: string]: UserCredential };
    permissions  : { [key: string]: UserPermission };
    roles        : { [key: string]: Role };
}

export interface UserStoreService {
    AuthenticateUser (command: AuthenticateUser) : AuthenticateUserResult;
    Catalog          (command: any) : Catalog;
    CatalogSchema    (command: any) : CatalogSchema;
    CatalogList      (command: any) : CatalogList;
    Echo             (command: any) : any;
}

export class UserCredential {
    id        : string;
    passHash? : string | null;
    token?    : string | null;
}

export class UserPermission {
    id     : string;
    roles? : string[] | null;
}

export class Role {
    id           : string;
    rights       : Right_Union[];
    description? : string | null;
}

export class AuthenticateUser {
    userId  : string;
    token   : string;
}

export class AuthenticateUserResult {
    isValid  : boolean;
}

