// Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema
import { int64 } from "./Standard";

/**
 * **ClusterStore** provide information about databases hosted by the Hub:   
 * - available containers aka tables per database   
 * - available commands per database   
 * - the schema assigned to each database
 */
// schema documentation only - not implemented right now
export interface ClusterStore {
    // --- containers
    containers  : { [key: string]: DbContainers };
    messages    : { [key: string]: DbMessages };
    schemas     : { [key: string]: DbSchema };

    // --- commands
    /** echos the given parameter to assure the database is working appropriately. */
    ["std.Echo"]           (param: any) : any;
    /** list all database containers */
    ["std.Containers"]     () : DbContainers;
    /** list all database commands and messages */
    ["std.Messages"]       () : DbMessages;
    /** return the JSON Schema assigned to the database */
    ["std.Schema"]         () : DbSchema;
    /** return the number of entities of all containers (or the given container) of the database */
    ["std.Stats"]          (param: string | null) : DbStats;
    /** returns general information about the Hub like version, host, project and environment name */
    ["std.Details"]        () : HostDetails;
    /** list all databases and their containers hosted by the Hub */
    ["std.Cluster"]        () : HostCluster;
}

export class DbContainers {
    id          : string;
    storage     : string;
    containers  : string[];
}

export class DbMessages {
    id        : string;
    commands  : string[];
    messages  : string[];
}

export class DbSchema {
    id           : string;
    schemaName   : string;
    schemaPath   : string;
    jsonSchemas  : { [key: string]: any };
}

export class DbStats {
    containers? : ContainerStats[] | null;
}

export class ContainerStats {
    name   : string;
    count  : int64;
}

export class HostDetails {
    version         : string;
    hostName?       : string | null;
    projectName?    : string | null;
    projectWebsite? : string | null;
    envName?        : string | null;
    /**
     * the color used to display the environment name in GUI's using CSS color format.  
     * E.g. using red for a production environment: "#ff0000" or "rgb(255 0 0)"
     */
    envColor?       : string | null;
}

export class HostCluster {
    databases  : DbContainers[];
}

