// Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema
using Friflo.Json.Fliox.Mapper.Map;
using Friflo.Json.Fliox.Hub.DB.Cluster;

// ReSharper disable InconsistentNaming
namespace Gen.Friflo.Json.Fliox.Hub.DB.Cluster
{
    static class Gen_UserResult
    {
        private const int Gen_roles = 0;
        private const int Gen_groups = 1;
        private const int Gen_clients = 2;
        private const int Gen_counts = 3;

        private static bool ReadField (ref UserResult obj, PropField field, ref Reader reader) {
            bool success;
            switch (field.genIndex) {
                case Gen_roles:   obj.roles   = reader.ReadClass (field, obj.roles,   out success);  return success;
                case Gen_groups:  obj.groups  = reader.ReadClass (field, obj.groups,  out success);  return success;
                case Gen_clients: obj.clients = reader.ReadClass (field, obj.clients, out success);  return success;
                case Gen_counts:  obj.counts  = reader.ReadClass (field, obj.counts,  out success);  return success;
            }
            return false;
        }

        private static void Write(ref UserResult obj, PropField[] fields, ref Writer writer, ref bool firstMember) {
            writer.WriteClass (fields[Gen_roles],   obj.roles,   ref firstMember);
            writer.WriteClass (fields[Gen_groups],  obj.groups,  ref firstMember);
            writer.WriteClass (fields[Gen_clients], obj.clients, ref firstMember);
            writer.WriteClass (fields[Gen_counts],  obj.counts,  ref firstMember);
        }
    }
}

