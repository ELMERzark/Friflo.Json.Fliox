
{
  "openapi": "3.0.0",
  "x-generator": "Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema",
  "info": {
    "title":        "UserStore",
    "description":  "Control individual user access to database containers and commands. <br/>\nEach <b>user</b> has a set of <b>roles</b> stored in container <b>permissions</b>. <br/>\nEach <b>role</b> in container <b>roles</b> has a set of <b>rights</b> which grant or deny container access or command execution.\n\nGenerated by <a href='https://github.com/friflo/Friflo.Json.Fliox#schema'>JSON Fliox</a>",
    "version":      "0.0.0"
  },
  "servers": [

  ],
  "tags": [
    {
      "name": "database",
      "description": "<a target='UserStore' href='html/schema.html'>schema</a>"
    },
    {
      "name": "commands",
      "description": "database <a target='UserStore' href='html/schema.html#commands'>commands</a>"
    },
    {
      "name": "credentials",
      "description": "entity type: <a target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential'>UserCredential</a>"
    },
    {
      "name": "permissions",
      "description": "entity type: <a target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission'>UserPermission</a>"
    },
    {
      "name": "roles",
      "description": "entity type: <a target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.Role'>Role</a>"
    },
    {
      "name": "targets",
      "description": "entity type: <a target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget'>UserTarget</a>"
    }],
  "paths": {
    "/": {
      "get": {
        "summary":    "return all database containers",
        "tags":       ["database"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers"
                }
              }
            }
          }
        }
      }
    },
    "/?command=AuthenticateUser": {
      "post": {
        "summary":    "authenticate user <b>Credentials</b>: <b>userId</b> and <b>token</b>",
        "tags":       ["commands"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.json#/definitions/Credentials"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.json#/definitions/AuthResult"
                }
              }
            }
          }
        }
      }
    },
    "/?command=ValidateUserDb": {
      "post": {
        "summary":    "",
        "tags":       ["commands"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.json#/definitions/ValidateUserDbResult"
                }
              }
            }
          }
        }
      }
    },
    "/?command=ClearAuthCache": {
      "post": {
        "summary":    "",
        "tags":       ["commands"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Echo": {
      "post": {
        "summary":    "echos the given parameter to assure the database is working appropriately.",
        "tags":       ["commands"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                   
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                   
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Containers": {
      "post": {
        "summary":    "list all database containers",
        "tags":       ["commands"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Messages": {
      "post": {
        "summary":    "list all database commands and messages",
        "tags":       ["commands"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbMessages"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Schema": {
      "post": {
        "summary":    "return the Schema assigned to the database",
        "tags":       ["commands"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbSchema"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Stats": {
      "post": {
        "summary":    "return the number of entities of all containers (or the given container) of the database",
        "tags":       ["commands"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbStats"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Host": {
      "post": {
        "summary":    "returns general information about the Hub like version, host, project and environment name",
        "tags":       ["commands"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostParam"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostInfo"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Cluster": {
      "post": {
        "summary":    "list all databases and their containers hosted by the Hub",
        "tags":       ["commands"],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostCluster"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.User": {
      "post": {
        "summary":    "return the groups of the current user. Optionally change the groups of the current user",
        "tags":       ["commands"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/UserParam"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/UserResult"
                }
              }
            }
          }
        }
      }
    },
    "/?command=std.Client": {
      "post": {
        "summary":    "return client specific infos and adjust general client behavior like <b>queueEvents</b>",
        "tags":       ["commands"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/ClientParam"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/ClientResult"
                }
              }
            }
          }
        }
      }
    },
    "/credentials": {
      "get": {
        "summary":    "return / filter multiple records from container credentials",
        "description":    "To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.",
        "tags":       ["credentials"],
        "parameters": [
          {
            "in":       "query",
            "name":     "filter",
            "schema":   { "type": "string" },
            "description": "filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`"
          },
          {
            "in":       "query",
            "name":     "limit",
            "schema":   { "type": "integer" },
            "description": "limit the number of returned records"
          },
          {
            "in":       "query",
            "name":     "maxCount",
            "schema":   { "type": "integer" },
            "description": "maximum number of records. Result will return a **cursor** if more records available."
          },
          {
            "in":       "query",
            "name":     "cursor",
            "schema":   { "type": "string" },
            "description": "pass the **cursor** returned by the previous request"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "create or update multiple records in container credentials",
        "tags":       ["credentials"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/credentials/{id}": {
      "get": {
        "summary":    "get a single record from container credentials",
        "tags":       ["credentials"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "write a single record to container credentials",
        "tags":       ["credentials"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "patch": {
        "summary":    "patch a single record in container credentials",
        "tags":       ["credentials"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { 
                    "type": "object",
                    "properties": {
                      "op": {
                        "enum": ["replace"]
                      },
                      "path": {
                        "type": "string"
                      },
                      "value": { }
                    } }
                },
                "example": [
                  {
                    "op":    "replace",
                    "path":  ".name",
                    "value": "Hello Patch!"
                  }
                ]
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "delete": {
        "summary":    "delete a single record in container credentials by id",
        "tags":       ["credentials"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/credentials/bulk-get": {
      "post": {
        "summary":    "get multiple records by id from container credentials",
        "tags":       ["credentials"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential" }
                }
              }
            }
          }
        }
      }
    },
    "/credentials/bulk-delete": {
      "post": {
        "summary":    "delete multiple records by id in container credentials",
        "tags":       ["credentials"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "summary":    "return / filter multiple records from container permissions",
        "description":    "To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.",
        "tags":       ["permissions"],
        "parameters": [
          {
            "in":       "query",
            "name":     "filter",
            "schema":   { "type": "string" },
            "description": "filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`"
          },
          {
            "in":       "query",
            "name":     "limit",
            "schema":   { "type": "integer" },
            "description": "limit the number of returned records"
          },
          {
            "in":       "query",
            "name":     "maxCount",
            "schema":   { "type": "integer" },
            "description": "maximum number of records. Result will return a **cursor** if more records available."
          },
          {
            "in":       "query",
            "name":     "cursor",
            "schema":   { "type": "string" },
            "description": "pass the **cursor** returned by the previous request"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "create or update multiple records in container permissions",
        "tags":       ["permissions"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "get": {
        "summary":    "get a single record from container permissions",
        "tags":       ["permissions"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "write a single record to container permissions",
        "tags":       ["permissions"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "patch": {
        "summary":    "patch a single record in container permissions",
        "tags":       ["permissions"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { 
                    "type": "object",
                    "properties": {
                      "op": {
                        "enum": ["replace"]
                      },
                      "path": {
                        "type": "string"
                      },
                      "value": { }
                    } }
                },
                "example": [
                  {
                    "op":    "replace",
                    "path":  ".name",
                    "value": "Hello Patch!"
                  }
                ]
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "delete": {
        "summary":    "delete a single record in container permissions by id",
        "tags":       ["permissions"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/permissions/bulk-get": {
      "post": {
        "summary":    "get multiple records by id from container permissions",
        "tags":       ["permissions"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission" }
                }
              }
            }
          }
        }
      }
    },
    "/permissions/bulk-delete": {
      "post": {
        "summary":    "delete multiple records by id in container permissions",
        "tags":       ["permissions"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "summary":    "return / filter multiple records from container roles",
        "description":    "To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.",
        "tags":       ["roles"],
        "parameters": [
          {
            "in":       "query",
            "name":     "filter",
            "schema":   { "type": "string" },
            "description": "filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`"
          },
          {
            "in":       "query",
            "name":     "limit",
            "schema":   { "type": "integer" },
            "description": "limit the number of returned records"
          },
          {
            "in":       "query",
            "name":     "maxCount",
            "schema":   { "type": "integer" },
            "description": "maximum number of records. Result will return a **cursor** if more records available."
          },
          {
            "in":       "query",
            "name":     "cursor",
            "schema":   { "type": "string" },
            "description": "pass the **cursor** returned by the previous request"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "create or update multiple records in container roles",
        "tags":       ["roles"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "summary":    "get a single record from container roles",
        "tags":       ["roles"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "write a single record to container roles",
        "tags":       ["roles"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "patch": {
        "summary":    "patch a single record in container roles",
        "tags":       ["roles"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { 
                    "type": "object",
                    "properties": {
                      "op": {
                        "enum": ["replace"]
                      },
                      "path": {
                        "type": "string"
                      },
                      "value": { }
                    } }
                },
                "example": [
                  {
                    "op":    "replace",
                    "path":  ".name",
                    "value": "Hello Patch!"
                  }
                ]
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "delete": {
        "summary":    "delete a single record in container roles by id",
        "tags":       ["roles"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/roles/bulk-get": {
      "post": {
        "summary":    "get multiple records by id from container roles",
        "tags":       ["roles"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role" }
                }
              }
            }
          }
        }
      }
    },
    "/roles/bulk-delete": {
      "post": {
        "summary":    "delete multiple records by id in container roles",
        "tags":       ["roles"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/targets": {
      "get": {
        "summary":    "return / filter multiple records from container targets",
        "description":    "To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.",
        "tags":       ["targets"],
        "parameters": [
          {
            "in":       "query",
            "name":     "filter",
            "schema":   { "type": "string" },
            "description": "filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`"
          },
          {
            "in":       "query",
            "name":     "limit",
            "schema":   { "type": "integer" },
            "description": "limit the number of returned records"
          },
          {
            "in":       "query",
            "name":     "maxCount",
            "schema":   { "type": "integer" },
            "description": "maximum number of records. Result will return a **cursor** if more records available."
          },
          {
            "in":       "query",
            "name":     "cursor",
            "schema":   { "type": "string" },
            "description": "pass the **cursor** returned by the previous request"
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "create or update multiple records in container targets",
        "tags":       ["targets"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/targets/{id}": {
      "get": {
        "summary":    "get a single record from container targets",
        "tags":       ["targets"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary":    "write a single record to container targets",
        "tags":       ["targets"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget"
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "patch": {
        "summary":    "patch a single record in container targets",
        "tags":       ["targets"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { 
                    "type": "object",
                    "properties": {
                      "op": {
                        "enum": ["replace"]
                      },
                      "path": {
                        "type": "string"
                      },
                      "value": { }
                    } }
                },
                "example": [
                  {
                    "op":    "replace",
                    "path":  ".name",
                    "value": "Hello Patch!"
                  }
                ]
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      },
      "delete": {
        "summary":    "delete a single record in container targets by id",
        "tags":       ["targets"],
        "parameters": [
          {
            "in":       "path",
            "name":     "id",
            "schema":   { "type": "string" },
            "required": true,
            "description": ""
          }
        ],
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    },
    "/targets/bulk-get": {
      "post": {
        "summary":    "get multiple records by id from container targets",
        "tags":       ["targets"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget" }
                }
              }
            }
          }
        }
      }
    },
    "/targets/bulk-delete": {
      "post": {
        "summary":    "delete multiple records by id in container targets",
        "tags":       ["targets"],
        "requestBody": {          
          "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
        },
        "responses": {
          "200": {             
            "description": "OK",
            "content": {
              "text/plain": { }
            }
          }
        }
      }
    }
  }   
}