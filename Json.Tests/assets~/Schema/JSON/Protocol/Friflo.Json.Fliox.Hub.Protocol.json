{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema",
    "definitions": {
        "SyncRequest": {
            "type": "object",
            "extends": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.ProtocolRequest.json#/definitions/ProtocolRequest" },
            "description": "A <b>SyncRequest</b> is sent to a <b>FlioxHub</b> targeting a specific <b>database</b>.",
            "properties": {
                "msg":      { "enum": ["sync"] },
                "req":      { "oneOf": [{ "$ref": "./Standard.json#/definitions/int32" }, {"type": "null"}], "description": "Used only for <b>RemoteClientHub</b> to enable:\n<p>\n1. Out of order response handling for their corresponding requests.\n</p><p>\n2. Multiplexing of requests and their responses for multiple clients e.g. <b>FlioxClient</b>\nusing the same connection.\nThis is not a common scenario but it enables using a single <b>WebSocketClientHub</b>\nused by multiple clients.\n</p>\nThe host itself only echos the <b>reqId</b> to <b>reqId</b> and\ndoes <b>not</b> utilize it internally." },
                "clt":      { "type": ["string", "null"], "description": "As a user can access a <b>FlioxHub</b> by multiple clients the <b>clientId</b>\nenables identifying each client individually. <br/>\nThe <b>clientId</b> is used for <b>SubscribeMessage</b> and <b>SubscribeChanges</b>\nto enable sending <b>EventMessage</b>'s to the desired subscriber." },
                "user":     { "type": ["string", "null"], "description": "Identify the user performing a sync request.\nIn case using of using <b>UserAuthenticator</b> the <b>userId</b> and <b>token</b>\nare use for user authentication." },
                "token":    { "type": ["string", "null"] },
                "ack":      { "oneOf": [{ "$ref": "./Standard.json#/definitions/int32" }, {"type": "null"}], "description": "<b>eventAck</b> is used to ensure (change) events are delivered reliable.\nA client set <b>eventAck</b> to the last received <b>seq</b> in case\nit has subscribed to database changes by a <b>SubscribeChanges</b> task.\nOtherwise <b>eventAck</b> is null." },
                "tasks":    { "type": "array", "items": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.Tasks.json#/definitions/SyncRequestTask" }, "description": "list of tasks either container operations or database commands / messages" },
                "database": { "type": ["string", "null"], "description": "database name the <b>tasks</b> apply to. null to access the default database" },
                "info":     { "description": "optional JSON value - can be used to describe a request" }
            },
            "required": [
                "msg",
                "tasks"
            ],
            "additionalProperties": false
        },
        "SyncResponse": {
            "type": "object",
            "extends": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.ProtocolResponse.json#/definitions/ProtocolResponse" },
            "description": "A <b>SyncResponse</b> is the response of <b>SyncRequest</b> executed by a <b>FlioxHub</b>",
            "properties": {
                "msg":        { "enum": ["resp"] },
                "req":        { "oneOf": [{ "$ref": "./Standard.json#/definitions/int32" }, {"type": "null"}], "description": "Set to the value of the corresponding <b>reqId</b> of a <b>ProtocolRequest</b>" },
                "clt":        { "type": ["string", "null"], "description": "Set to <b>clientId</b> of a <b>SyncRequest</b> in case the given\n<b>clientId</b> was valid. Otherwise it is set to null." },
                "database":   { "type": ["string", "null"], "description": "for debugging - not used by Protocol" },
                "tasks":      { "type": ["array", "null"], "items": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.Tasks.json#/definitions/SyncTaskResult" }, "description": "list of task results corresponding to the <b>tasks</b> in a <b>SyncRequest</b>" },
                "containers": { "type": ["array", "null"], "items": { "$ref": "#/definitions/ContainerEntities" }, "description": "entities as results from the <b>tasks</b> in a <b>SyncRequest</b>\ngrouped by container" },
                "info":       {  }
            },
            "required": [
                "msg"
            ],
            "additionalProperties": false
        },
        "ContainerEntities": {
            "type": "object",
            "description": "Used by <b>SyncResponse</b> to return the <b>entities</b> as results\nfrom <b>tasks</b> of a <b>SyncRequest</b>",
            "properties": {
                "container": { "type": "string", "description": "container name the of the returned <b>entities</b>" },
                "count":     { "oneOf": [{ "$ref": "./Standard.json#/definitions/int32" }, {"type": "null"}], "description": "number of <b>entities</b> - not utilized by Protocol" },
                "entities":  { "type": "array", "items": {  }, "description": "all <b>entities</b> from the <b>container</b> resulting from\n<b>ReadEntities</b> and <b>QueryEntities</b> tasks of a <b>SyncRequest</b>" },
                "notFound":  { "type": ["array", "null"], "items": { "type": "string" }, "description": "list of entities not found by <b>ReadEntities</b> tasks" },
                "errors":    { "type": ["array", "null"], "items": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.Models.json#/definitions/EntityError" }, "description": "list of entity errors read from <b>container</b>" }
            },
            "required": [
                "container",
                "entities"
            ],
            "additionalProperties": false
        },
        "ErrorResponse": {
            "type": "object",
            "extends": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.ProtocolResponse.json#/definitions/ProtocolResponse" },
            "description": "<b>ErrorResponse</b> is returned for a <b>SyncRequest</b> in case the whole requests failed",
            "properties": {
                "msg":     { "enum": ["error"] },
                "req":     { "oneOf": [{ "$ref": "./Standard.json#/definitions/int32" }, {"type": "null"}], "description": "Set to the value of the corresponding <b>reqId</b> of a <b>ProtocolRequest</b>" },
                "clt":     { "type": ["string", "null"], "description": "Set to <b>clientId</b> of a <b>SyncRequest</b> in case the given\n<b>clientId</b> was valid. Otherwise it is set to null." },
                "message": { "type": ["string", "null"], "description": "error message" },
                "type":    { "$ref": "#/definitions/ErrorResponseType", "description": "error type: invalid request or execution exception" }
            },
            "required": [
                "msg",
                "type"
            ],
            "additionalProperties": false
        },
        "ErrorResponseType": {
            "enum": [
                "BadRequest",
                "Exception",
                "BadResponse"
            ],
            "descriptions": {
                "BadRequest":  "Invalid JSON request or invalid request parameters. Maps to HTTP status code 400 (Bad Request)",
                "Exception":   "Internal exception. Maps to HTTP status code 500 (Internal Server Error)",
                "BadResponse": "Invalid JSON response. Maps to HTTP status code 500 (Internal Server Error)"
            }

        },
        "EventMessage": {
            "type": "object",
            "extends": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.ProtocolEvent.json#/definitions/ProtocolEvent" },
            "properties": {
                "msg":   { "enum": ["ev"] },
                "seq":   { "$ref": "./Standard.json#/definitions/int32", "description": "Increasing event sequence number starting with 1 for a specific target client <b>dstClientId</b>.\nEach target client (subscriber) has its own sequence." },
                "src":   { "type": "string", "description": "The user which caused the event. Specifically the user which made a database change or sent a message / command.\nThe user client is not preserved by en extra property as a use case for this is not obvious." },
                "clt":   { "type": "string", "description": "The target client the event is sent to. This enables sharing a single (WebSocket) connection by multiple clients.\nIn many scenarios this property is redundant as every client uses a WebSocket exclusively." },
                "db":    { "type": "string", "description": "The database the <b>tasks</b> refer to" },
                "tasks": { "type": ["array", "null"], "items": { "$ref": "./Friflo.Json.Fliox.Hub.Protocol.Tasks.json#/definitions/SyncRequestTask" }, "description": "Contains the events an application subscribed. These are:<br/><b>CreateEntities</b>,<br/><b>UpsertEntities</b>,<br/><b>DeleteEntities</b>,<br/><b>PatchEntities</b>,<br/><b>SendMessage</b>,<br/><b>SendCommand</b><br/>" }
            },
            "required": [
                "msg",
                "seq",
                "src",
                "clt",
                "db"
            ],
            "additionalProperties": false
        }
    }
}

