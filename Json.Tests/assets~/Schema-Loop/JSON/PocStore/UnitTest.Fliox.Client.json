{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Generated by: https://github.com/friflo/Friflo.Json.Fliox/tree/main/Json/Fliox/Schema",
    "definitions": {
        "PocStore": {
            "type": "object",
            "isAbstract": true,
            "description": "\n            The PocStore schema has two functionalities: \n\n            1. Defines a database schema by declaring its containers and commands \n\n            2. Is a database client providing type safe access to its containers and commands\n            \n",
            "properties": {
                "orders":    { "additionalProperties": { "$ref": "./UnitTest.Fliox.Client.Order.json#/definitions/Order" }, "type": "object" },
                "customers": { "additionalProperties": { "$ref": "./UnitTest.Fliox.Client.Customer.json#/definitions/Customer" }, "type": "object" },
                "articles":  { "additionalProperties": { "$ref": "./UnitTest.Fliox.Client.Article.json#/definitions/Article" }, "type": "object" },
                "producers": { "additionalProperties": { "$ref": "./UnitTest.Fliox.Client.Producer.json#/definitions/Producer" }, "type": "object" },
                "employees": { "additionalProperties": { "$ref": "./UnitTest.Fliox.Client.Employee.json#/definitions/Employee" }, "type": "object" },
                "types":     { "additionalProperties": { "$ref": "./UnitTest.Fliox.Client.TestType.json#/definitions/TestType" }, "type": "object" }
            },
            "required": [
                "orders",
                "customers",
                "articles",
                "producers",
                "employees",
                "types"
            ],
            "additionalProperties": false,
            "commands": {
                "TestCommand":    { "param": { "$ref": "#/definitions/TestCommand" }, "result": { "type": "boolean" } },
                "SyncCommand":    { "param": { "type": "string" }, "result": { "type": "string" } },
                "AsyncCommand":   { "param": { "type": "string" }, "result": { "type": "string" } },
                "test.Command1":  { "param": { "type": "string" }, "result": { "type": "string" } },
                "test.Command2":  { "param": { "type": "string" }, "result": { "type": "string" } },
                "std.Echo":       { "param": {  }, "result": {  },
                    "description": "echos the given parameter to assure the database is working appropriately. " },
                "std.Containers": { "param": {  }, "result": { "$ref": "./Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers" },
                    "description": "list all containers of the database" },
                "std.Commands":   { "param": {  }, "result": { "$ref": "./Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbCommands" },
                    "description": "list all commands exposed by the database" },
                "std.Schema":     { "param": {  }, "result": { "$ref": "./Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbSchema" },
                    "description": "return the JSON Schema assigned to the database" },
                "std.Stats":      { "param": { "type": "string" }, "result": { "$ref": "./Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbStats" },
                    "description": "return the number entities in the containers of the database" },
                "std.Details":    { "param": {  }, "result": { "$ref": "./Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostDetails" },
                    "description": "returns descriptive information about the Hub like version, host, project and environment name" },
                "std.Cluster":    { "param": {  }, "result": { "$ref": "./Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostCluster" },
                    "description": "list all databases and their containers hosted by the Hub" }
            }
        },
        "OrderItem": {
            "type": "object",
            "properties": {
                "article": { "type": "string", "relation": "articles" },
                "amount":  { "$ref": "./Standard.json#/definitions/int32" },
                "name":    { "type": ["string", "null"] }
            },
            "required": [
                "article",
                "amount"
            ],
            "additionalProperties": false
        },
        "PocEntity": {
            "type": "object",
            "isAbstract": true,
            "properties": {
                "id": { "type": "string" }
            },
            "required": [
                "id"
            ],
            "additionalProperties": false
        },
        "PocStruct": {
            "type": "object",
            "isStruct": true,
            "properties": {
                "value": { "$ref": "./Standard.json#/definitions/int32" }
            },
            "required": [
                "value"
            ],
            "additionalProperties": false
        },
        "DerivedClass": {
            "type": "object",
            "extends": { "$ref": "#/definitions/OrderItem" },
            "properties": {
                "derivedVal": { "$ref": "./Standard.json#/definitions/int32" },
                "article":    { "type": "string", "relation": "articles" },
                "amount":     { "$ref": "./Standard.json#/definitions/int32" },
                "name":       { "type": ["string", "null"] }
            },
            "required": [
                "derivedVal",
                "article",
                "amount"
            ],
            "additionalProperties": false
        },
        "TestCommand": {
            "type": "object",
            "properties": {
                "text": { "type": ["string", "null"] }
            },
            "additionalProperties": false
        }
    }
}

