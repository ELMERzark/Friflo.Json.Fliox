// Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema
package UserStore.Hub.DB.Cluster

import kotlinx.serialization.*
import CustomSerializer.*
import kotlinx.serialization.json.*
import UserStore.Hub.Protocol.Tasks.*

@Serializable
data class DbContainers (
              val id         : String,
              val storage    : String,
              val containers : List<String>,
)

@Serializable
data class DbMessages (
              val id       : String,
              val commands : List<String>,
              val messages : List<String>,
)

@Serializable
data class DbSchema (
              val id          : String,
              val schemaName  : String,
              val schemaPath  : String,
              val jsonSchemas : HashMap<String, JsonElement>,
)

@Serializable
data class DbStats (
              val containers : List<ContainerStats>? = null,
)

@Serializable
data class ContainerStats (
              val name  : String,
              val count : Long,
)

@Serializable
data class HostParam (
              val memory    : Boolean? = null,
              val gcCollect : Boolean? = null,
)

@Serializable
data class HostInfo (
              val hostVersion    : String,
              val flioxVersion   : String,
              val hostName       : String? = null,
              val projectName    : String? = null,
              val projectWebsite : String? = null,
              val envName        : String? = null,
              val envColor       : String? = null,
              val pubSub         : Boolean,
              val routes         : List<String>,
              val memory         : HostMemory? = null,
)

@Serializable
data class HostMemory (
              val totalAllocatedBytes : Long,
              val totalMemory         : Long,
              val gc                  : HostGCMemory? = null,
)

@Serializable
data class HostGCMemory (
              val highMemoryLoadThresholdBytes : Long,
              val totalAvailableMemoryBytes    : Long,
              val memoryLoadBytes              : Long,
              val heapSizeBytes                : Long,
              val fragmentedBytes              : Long,
)

@Serializable
data class HostCluster (
              val databases : List<DbContainers>,
)

@Serializable
data class UserParam (
              val addGroups    : List<String>? = null,
              val removeGroups : List<String>? = null,
)

@Serializable
data class UserResult (
              val groups : List<String>,
)

@Serializable
data class ClientParam (
              val ensureClientId : Boolean? = null,
              val queueEvents    : Boolean? = null,
)

@Serializable
data class ClientResult (
              val queuedEvents       : Int,
              val clientId           : String? = null,
              val subscriptionEvents : SubscriptionEvents? = null,
)

@Serializable
data class SubscriptionEvents (
              val seq         : Int,
              val queued      : Int,
              val queueEvents : Boolean,
              val connected   : Boolean,
              val messageSubs : List<String>? = null,
              val changeSubs  : List<ChangeSubscription>? = null,
)

@Serializable
data class ChangeSubscription (
              val container : String,
              val changes   : List<EntityChange>,
              val filter    : String? = null,
)

