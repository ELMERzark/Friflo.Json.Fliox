name: CD

on:
  push:
    tags:
    - 'v*'
  
env:
  PACKAGE_DIRECTORY: ${{ github.workspace }}/output

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.101

    - name: Restore dependencies
      run: dotnet restore

    - name: Set VERSION from git tag 
      run: |
        TAG=${{ github.ref_name }}
        echo tag name: ${TAG}
        echo "VERSION=${TAG#v}" >> $GITHUB_ENV      # remove prefix 'v' from tag

    - name: Echo version
      run: |
        echo package version: ${VERSION}

    - name: Build
      run: |
        echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV
        dotnet build --no-restore /p:Version=${VERSION} /p:FileVersion=${VERSION} /p:AssemblyVersion=${VERSION} -c Release

    - name: Test
      run: dotnet test --no-build --verbosity normal -c Release

    - name: Pack
      run: dotnet pack --no-restore --no-build -p:PackageVersion=${VERSION} -p:SymbolPackageFormat=snupkg -p:PackageOutputPath=${{ env.PACKAGE_DIRECTORY }} -c Release

    - name: Push
      run: |
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Burst.${VERSION}.nupkg                --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.${VERSION}.nupkg                --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Annotation.${VERSION}.nupkg     --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.${VERSION}.nupkg            --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.AspNetCore.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.Cosmos.${VERSION}.nupkg     --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.Explorer.${VERSION}.nupkg   --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.GraphQL.${VERSION}.nupkg    --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.MySQL.${VERSION}.nupkg      --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.PostgreSQL.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.SQLite.${VERSION}.nupkg     --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}
        dotnet nuget push ${{ env.PACKAGE_DIRECTORY }}/Friflo.Json.Fliox.Hub.SQLServer.${VERSION}.nupkg  --source https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_AUTH_TOKEN }}

    
