// Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema
using Friflo.Json.Fliox.Mapper.Map;
using Friflo.Json.Fliox.Hub.Protocol.Tasks;

// ReSharper disable InconsistentNaming
namespace Gen.Friflo.Json.Fliox.Hub.Protocol.Tasks
{
    static class Gen_QueryEntitiesResult
    {
        private const int Gen_container = 0;
        private const int Gen_cursor = 1;
        private const int Gen_len = 2;
        private const int Gen_set = 3;
        private const int Gen_errors = 4;
        private const int Gen_references = 5;
        private const int Gen_sql = 6;

        private static bool ReadField (ref QueryEntitiesResult obj, PropField field, ref Reader reader) {
            bool success;
            switch (field.genIndex) {
                case Gen_container:  obj.container  = reader.ReadShortString (field, obj.container,  out success);  return success;
                case Gen_cursor:     obj.cursor     = reader.ReadString    (field, obj.cursor,     out success);  return success;
                case Gen_len:        obj.len        = reader.ReadInt32Null (field, out success);  return success;
                case Gen_set:        obj.set        = reader.ReadClass     (field, obj.set,        out success);  return success;
                case Gen_errors:     obj.errors     = reader.ReadClass     (field, obj.errors,     out success);  return success;
                case Gen_references: obj.references = reader.ReadClass     (field, obj.references, out success);  return success;
                case Gen_sql:        obj.sql        = reader.ReadString    (field, obj.sql,        out success);  return success;
            }
            return false;
        }

        private static void Write(ref QueryEntitiesResult obj, PropField[] fields, ref Writer writer, ref bool firstMember) {
            writer.WriteShortString (fields[Gen_container],  obj.container,  ref firstMember);
            writer.WriteString    (fields[Gen_cursor],     obj.cursor,     ref firstMember);
            writer.WriteInt32Null (fields[Gen_len],        obj.len,        ref firstMember);
            writer.WriteClass     (fields[Gen_set],        obj.set,        ref firstMember);
            writer.WriteClass     (fields[Gen_errors],     obj.errors,     ref firstMember);
            writer.WriteClass     (fields[Gen_references], obj.references, ref firstMember);
            writer.WriteString    (fields[Gen_sql],        obj.sql,        ref firstMember);
        }
    }
}

