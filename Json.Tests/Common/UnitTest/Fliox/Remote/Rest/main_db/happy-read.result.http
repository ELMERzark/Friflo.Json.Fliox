@auth = fliox-user=admin; fliox-token=admin
@base = http://localhost:8010/fliox

###
GET {{base}}/rest/main_db/articles/article-1
# StatusCode:   200
# Content-Type: application/json

{
    "id": "article-1",
    "name": "Changed name",
    "producer": "producer-canon"
}

###
POST {{base}}/rest/main_db/?msg=Message1
# StatusCode:   200
# Content-Type: application/json

"received"

###
GET {{base}}/rest
# StatusCode:   200
# Content-Type: application/json

{
    "databases": [
        {
            "id": "main_db",
            "storage": "in-memory",
            "containers": [
                "orders",
                "customers",
                "articles",
                "articles2",
                "producers",
                "employees",
                "types"
            ],
            "defaultDB": true
        },
        {
            "id": "cluster",
            "storage": "in-memory",
            "containers": [
                "containers",
                "messages",
                "schemas"
            ]
        },
        {
            "id": "monitor",
            "storage": "in-memory",
            "containers": [
                "hosts",
                "users",
                "clients",
                "histories"
            ]
        },
        {
            "id": "user_db",
            "storage": "file-system",
            "containers": [
                "credentials",
                "permissions",
                "roles",
                "targets"
            ]
        },
        {
            "id": "signaling",
            "storage": "in-memory",
            "containers": [
                "hosts"
            ]
        }
    ]
}

###
GET {{base}}/rest/main_db
# StatusCode:   200
# Content-Type: application/json

{
    "id": "main_db",
    "storage": "in-memory",
    "containers": [
        "orders",
        "customers",
        "articles",
        "articles2",
        "producers",
        "employees",
        "types"
    ],
    "defaultDB": true
}

###
GET {{base}}/rest/main_db/articles?orderByKey=asc
# StatusCode:   200
# Content-Type: application/json

[
    {
    "id": ".hidden-test",
    "name": "test hidden file"
},
    {
    "id": "article-1",
    "name": "Changed name",
    "producer": "producer-canon"
},
    {
    "id": "article-2",
    "name": "Smartphone"
},
    {
    "id": "article-galaxy",
    "name": "Galaxy S10",
    "producer": "producer-samsung"
},
    {
    "id": "article-ipad",
    "name": "iPad Pro",
    "producer": "producer-apple"
},
    {
    "id": "article-notebook-ðŸ’»-unicode",
    "name": "Notebook",
    "producer": "producer-samsung"
},
    {
    "id": "log-create-read-error",
    "name": "used for successful read"
}
]

###
GET {{base}}/rest/main_db/articles/article-1
# StatusCode:   200
# Content-Type: application/json

{
    "id": "article-1",
    "name": "Changed name",
    "producer": "producer-canon"
}

###
GET {{base}}/rest/main_db/articles?filter=o=>o.producer=='producer-samsung'&orderByKey=asc
# StatusCode:   200
# Content-Type: application/json

[
    {
    "id": "article-galaxy",
    "name": "Galaxy S10",
    "producer": "producer-samsung"
},
    {
    "id": "article-notebook-ðŸ’»-unicode",
    "name": "Notebook",
    "producer": "producer-samsung"
}
]

###
GET {{base}}/rest/main_db/articles?ids=article-1,article-2
# StatusCode:   200
# Content-Type: application/json

[
    {
    "id": "article-1",
    "name": "Changed name",
    "producer": "producer-canon"
},
    {
    "id": "article-2",
    "name": "Smartphone"
}
]

###
POST {{base}}/rest/main_db/articles/bulk-get
# StatusCode:   200
# Content-Type: application/json

[
    {
    "id": "article-1",
    "name": "Changed name",
    "producer": "producer-canon"
},
    {
    "id": "article-2",
    "name": "Smartphone"
}
]

###
POST {{base}}/rest/main_db/articles/bulk-get
# StatusCode:   200
# Content-Type: application/json

[
]

###
GET {{base}}/rest/main_db/orders?filter=o=>o.items.Any(i=>i.name=="Camera")&orderByKey=asc
# StatusCode:   200
# Content-Type: application/json

[
    {
    "id": "order-1",
    "customer": "customer-1",
    "created": "2021-07-22T06:00:00.000Z",
    "items": [
        {
            "article": "article-1",
            "amount": 1,
            "name": "Camera"
        },
        {
            "article": "article-2",
            "amount": 2,
            "name": "Smartphone"
        },
        {
            "article": "article-1",
            "amount": 3,
            "name": "Camera"
        }
    ]
}
]

###
GET {{base}}/rest/main_db/orders?filter=o=>o.items.Any(i=>i.name=="xxx")
# StatusCode:   200
# Content-Type: application/json

[
]

###
GET {{base}}/rest/main_db/orders?filter=o=>o.items.Any(i=>i.article.StartsWith("article-"))&orderByKey=asc
# StatusCode:   200
# Content-Type: application/json

[
    {
    "id": "order-1",
    "customer": "customer-1",
    "created": "2021-07-22T06:00:00.000Z",
    "items": [
        {
            "article": "article-1",
            "amount": 1,
            "name": "Camera"
        },
        {
            "article": "article-2",
            "amount": 2,
            "name": "Smartphone"
        },
        {
            "article": "article-1",
            "amount": 3,
            "name": "Camera"
        }
    ]
}
]

###
GET {{base}}/rest/main_db/orders?filter=o=>o.items.Any(i=>i.article.StartsWith("xxx"))
# StatusCode:   200
# Content-Type: application/json

[
]

