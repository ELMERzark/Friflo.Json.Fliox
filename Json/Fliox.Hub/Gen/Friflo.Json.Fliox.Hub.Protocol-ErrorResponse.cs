// Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema
using Friflo.Json.Fliox.Mapper.Map;
using Friflo.Json.Fliox.Hub.Protocol;

// ReSharper disable InconsistentNaming
namespace Gen.Friflo.Json.Fliox.Hub.Protocol
{
    static class Gen_ErrorResponse
    {
        private const int Gen_reqId = 0;
        private const int Gen_clientId = 1;
        private const int Gen_message = 2;
        private const int Gen_type = 3;

        private static bool ReadField (ref ErrorResponse obj, PropField field, ref Reader reader) {
            bool success;
            switch (field.genIndex) {
                case Gen_reqId:    obj.reqId    = reader.ReadInt32Null (field, out success);  return success;
                case Gen_clientId: obj.clientId = reader.ReadJsonKey   (field, obj.clientId, out success);  return success;
                case Gen_message:  obj.message  = reader.ReadString    (field, obj.message,  out success);  return success;
                case Gen_type:     obj.type     = reader.ReadEnum      (field, obj.type,     out success);  return success;
            }
            return false;
        }

        private static void Write(ref ErrorResponse obj, PropField[] fields, ref Writer writer, ref bool firstMember) {
            writer.WriteInt32Null (fields[Gen_reqId],    obj.reqId,    ref firstMember);
            writer.WriteJsonKey   (fields[Gen_clientId], obj.clientId, ref firstMember);
            writer.WriteString    (fields[Gen_message],  obj.message,  ref firstMember);
            writer.WriteEnum      (fields[Gen_type],     obj.type,     ref firstMember);
        }
    }
}

